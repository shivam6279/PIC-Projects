#ifndef _OLED_H_
#define _OLED_H_

/*
I2C 128x64 OLED LCD
Requires I2C.h and XC.h
*/

void write_int(int a, unsigned char precision);
void write_float(double a, unsigned char left, unsigned char right);
void oled_command(unsigned char dom);
void oled_write(unsigned char data);
void clear_display();
void init_oled();
void set_xy(unsigned char row, unsigned char col);
void write_line(unsigned char data);
void write_char(unsigned char a);
void write_str(const unsigned char *string);

unsigned char characters[][8]={//Too much data for PIC16
    {0x00,0x00,0x00,0x00,0x00},//  
    {0x00,0x5F,0x00,0x00,0x00},//!
    {0x00,0x07,0x00,0x07,0x00},//"
    {0x14,0x7F,0x14,0x7F,0x14},//#
    {0x24,0x2A,0x7F,0x2A,0x12},//$
    {0x23,0x13,0x08,0x64,0x62},//%
    {0x36,0x49,0x55,0x22,0x50},//&
    {0x00,0x05,0x03,0x00,0x00},//'
    {0x1C,0x22,0x41,0x00,0x00},//(
    {0x41,0x22,0x1C,0x00,0x00},//)
    {0x08,0x2A,0x1C,0x2A,0x08},//*
    {0x08,0x08,0x3E,0x08,0x08},//+
    {0xA0,0x60,0x00,0x00,0x00},//,
    {0x08,0x08,0x08,0x08,0x08},//-
    {0x60,0x60,0x00,0x00,0x00},//.
    {0x20,0x10,0x08,0x04,0x02},///
    {0x3E,0x51,0x49,0x45,0x3E},//0
    {0x00,0x42,0x7F,0x40,0x00},//1
    {0x62,0x51,0x49,0x49,0x46},//2
    {0x22,0x41,0x49,0x49,0x36},//3
    {0x18,0x14,0x12,0x7F,0x10},//4
    {0x27,0x45,0x45,0x45,0x39},//5
    {0x3C,0x4A,0x49,0x49,0x30},//6
    {0x01,0x71,0x09,0x05,0x03},//7
    {0x36,0x49,0x49,0x49,0x36},//8
    {0x06,0x49,0x49,0x29,0x1E},//9
    {0x00,0x36,0x36,0x00,0x00},//:
    {0x00,0xAC,0x6C,0x00,0x00},//;
    {0x08,0x14,0x22,0x41,0x00},//>
    {0x14,0x14,0x14,0x14,0x14},//=
    {0x41,0x22,0x14,0x08,0x00},//>
    {0x02,0x01,0x51,0x09,0x06},//?
    {0x32,0x49,0x79,0x41,0x3E},//@
    {0x7E,0x09,0x09,0x09,0x7E},//A
    {0x7F,0x49,0x49,0x49,0x36},//B
    {0x3E,0x41,0x41,0x41,0x22},//C
    {0x7F,0x41,0x41,0x22,0x1C},//D
    {0x7F,0x49,0x49,0x49,0x41},//E
    {0x7F,0x09,0x09,0x09,0x01},//F
    {0x3E,0x41,0x41,0x51,0x72},//G
    {0x7F,0x08,0x08,0x08,0x7F},//H
    {0x41,0x7F,0x41,0x00,0x00},//I
    {0x20,0x40,0x41,0x3F,0x01},//J
    {0x7F,0x08,0x14,0x22,0x41},//K
    {0x7F,0x40,0x40,0x40,0x40},//L
    {0x7F,0x02,0x0C,0x02,0x7F},//M
    {0x7F,0x04,0x08,0x10,0x7F},//N
    {0x3E,0x41,0x41,0x41,0x3E},//O
    {0x7F,0x09,0x09,0x09,0x06},//P
    {0x3E,0x41,0x51,0x21,0x5E},//Q
    {0x7F,0x09,0x19,0x29,0x46},//R
    {0x26,0x49,0x49,0x49,0x32},//S
    {0x01,0x01,0x7F,0x01,0x01},//T
    {0x3F,0x40,0x40,0x40,0x3F},//U
    {0x1F,0x20,0x40,0x20,0x1F},//V
    {0x3F,0x40,0x38,0x40,0x3F},//W
    {0x63,0x14,0x08,0x14,0x63},//X
    {0x03,0x04,0x78,0x04,0x03},//Y
    {0x61,0x51,0x49,0x45,0x43},//Z
    {0x7F,0x41,0x41,0x00,0x00},//[
    {0x02,0x04,0x08,0x10,0x20},//\'
    {0x41,0x41,0x7F,0x00,0x00},//]
    {0x04,0x02,0x01,0x02,0x04},//^
    {0x80,0x80,0x80,0x80,0x80},//_
    {0x01,0x02,0x04,0x00,0x00},//`
    {0x20,0x54,0x54,0x54,0x78},//a
    {0x7F,0x48,0x44,0x44,0x38},//b
    {0x38,0x44,0x44,0x28,0x00},//c
    {0x38,0x44,0x44,0x48,0x7F},//d
    {0x38,0x54,0x54,0x54,0x18},//e
    {0x08,0x7E,0x09,0x02,0x00},//f
    {0x18,0xA4,0xA4,0xA4,0x7C},//g
    {0x7F,0x08,0x04,0x04,0x78},//h
    {0x00,0x7D,0x00,0x00,0x00},//i
    {0x80,0x84,0x7D,0x00,0x00},//j
    {0x7F,0x10,0x28,0x44,0x00},//k
    {0x41,0x7F,0x40,0x00,0x00},//l
    {0x7C,0x04,0x18,0x04,0x78},//m
    {0x7C,0x08,0x04,0x7C,0x00},//n
    {0x38,0x44,0x44,0x38,0x00},//o
    {0xFC,0x24,0x24,0x18,0x00},//p
    {0x18,0x24,0x24,0xFC,0x00},//q
    {0x00,0x7C,0x08,0x04,0x00},//r
    {0x48,0x54,0x54,0x24,0x00},//s
    {0x04,0x7F,0x44,0x00,0x00},//t
    {0x3C,0x40,0x40,0x7C,0x00},//u
    {0x1C,0x20,0x40,0x20,0x1C},//v
    {0x3C,0x40,0x30,0x40,0x3C},//w
    {0x44,0x28,0x10,0x28,0x44},//x
    {0x1C,0xA0,0xA0,0x7C,0x00},//y
    {0x44,0x64,0x54,0x4C,0x44},//z
    {0x08,0x36,0x41,0x00,0x00},//{
    {0x00,0x7F,0x00,0x00,0x00},//|
    {0x41,0x36,0x08,0x00,0x00},//}
};

void write_int(int a, unsigned char precision){
    if(a < 0){
        a *= (-1);
        send_char('-');
    }
    else{
        send_char('+');
    }
    if(precision >= 6) send_char(((a / 100000) % 10) + 48);
    if(precision >= 5) send_char(((a / 10000) % 10) + 48);
    if(precision >= 4) send_char(((a / 1000) % 10) + 48);
    if(precision >= 3) send_char(((a / 100) % 10) + 48);
    if(precision >= 2) send_char(((a / 10) % 10) + 48);
    if(precision >= 1) send_char((a % 10) + 48);
}

void write_float(double a, unsigned char left, unsigned char right){
    unsigned char i;
    long int tens = 10;
    if(a < 0){
        a *= (-1);
        send_char('-');
    }
    else{
        send_char('+');
    }    
    if(left >= 7) send_char(((int)(a / 1000000) % 10) + 48);
    if(left >= 6) send_char(((int)(a / 100000) % 10) + 48);
    if(left >= 5) send_char(((int)(a / 10000) % 10) + 48);
    if(left >= 4) send_char(((int)(a / 1000) % 10) + 48);
    if(left >= 3) send_char(((int)(a / 100) % 10) + 48);
    if(left >= 2) send_char(((int)(a / 10) % 10) + 48);
    if(left >= 1) send_char(((int)a % 10) + 48);
    send_char('.');
    for(i = 0; i < right; i++){
        send_char(((long int)(a * tens) % 10) + 48);
        tens *= 10;
    }
}

void oled_command(unsigned char data){ 
   i2c_start(); 
   i2c_send(0x78); 
   i2c_send(0x00); 
   i2c_send(data); 
   i2c_stop(); 
} 

void write_str(const unsigned char *string){
    while(*string != '\0'){
        send_char(*string);
        string++;
    }
}

void write_char(unsigned char a){
    unsigned char i;
    send_line(0);
    for(i = 0; i < 5; i++){
        send_line(characters[a - 32][i]);
    }
}

void init_oled(){
    oled_command(0xae); 
    oled_command(0xa8); 
    oled_command(0x3f); 
    oled_command(0xd3); 
    oled_command(0x00); 
    oled_command(0x40); 
    oled_command(0xa0); 
    oled_command(0xa1); 
    oled_command(0xc0); 
    oled_command(0xc8); 
    oled_command(0xda); 
    oled_command(0x12); 
    oled_command(0x81); 
    oled_command(0xFF); 
    oled_command(0xa4); 
    oled_command(0xa6); 
    oled_command(0xd5); 
    oled_command(0x80); 
    oled_command(0x8d); 
    oled_command(0x14); 
    oled_command(0xAF); 
    oled_command(0x20); 
    oled_command(0x00); 
}

void oled_write(unsigned char data){ 
    int i; 
    oled_command(0x21) ; 
    oled_command(0x00); 
    oled_command(127); 
    oled_command(0x22) ; 
    oled_command(0x00); 
    oled_command(7); 
    i2c_start (); 
    i2c_send(0x78) ; 
    i2c_send(0x40) ; 
    for(i = 0; i < 1024; i++){ 
        i2c_send(data); 
    } 
     i2c_stop (); 
} 

void set_xy(unsigned char row, unsigned char col){
    i2c_start();
    i2c_send(0x78);
    i2c_send(0x00);
    i2c_send(0xB0 + row);
    i2c_stop();
    i2c_start();
    i2c_send(0x78);
    i2c_send(0x00);
    i2c_send((col & 0x0F));
    i2c_stop();
    i2c_start();
    i2c_send(0x78);
    i2c_send(0x00);
    i2c_send(0x10 + ((col >> 4) & 0x0F));
    i2c_stop();
}

void write_line(unsigned char data){
    i2c_start();
    i2c_send(0x78);
    i2c_send(0x40);
    i2c_send(data);
    i2c_stop();
}

#endif


